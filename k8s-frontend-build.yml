name: Build & Push Front-End

on:
  push:
    branches:
      - deploy-dev-*
      - deploy-staging-*
      - deploy-stagingireland-*
      - deploy-prodireland-*
      - deploy-prod-*

jobs:
  build:
    name: Build Image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Get Branch prefix
        run: echo "BRANCH_PREFIX=$(echo $GITHUB_REF_NAME | cut -d "-" -f-2)" >> $GITHUB_ENV

      - name: Set Env Branch
        run: |
          if [ "${{ env.BRANCH_PREFIX }}" == "deploy-dev" ]; then
            echo "DEST_BRANCH=deploy-dev" >> $GITHUB_ENV
            echo "DEST_REGION=us-east-1" >> $GITHUB_ENV
          elif [ ${{ env.BRANCH_PREFIX }} == "deploy-staging" ]; then
            echo "DEST_BRANCH=deploy-staging" >> $GITHUB_ENV
            echo "DEST_REGION=us-east-1" >> $GITHUB_ENV
          elif [ ${{ env.BRANCH_PREFIX }} == 'deploy-stagingireland' ]; then
            echo "DEST_BRANCH=deploy-stagingireland" >> $GITHUB_ENV
            echo "DEST_REGION=eu-west-1" >> $GITHUB_ENV
          elif [ ${{ env.BRANCH_PREFIX }} == "deploy-prod" ]; then
            echo "DEST_BRANCH=deploy-prod" >> $GITHUB_ENV
            echo "DEST_REGION=us-east-1" >> $GITHUB_ENV
          elif [ ${{ env.BRANCH_PREFIX }} == 'deploy-prodireland' ]; then
            echo "DEST_BRANCH=deploy-prodireland" >> $GITHUB_ENV
            echo "DEST_REGION=eu-west-1" >> $GITHUB_ENV
          else
            echo "Not a valid environment"
            exit 1;
          fi

      - name: Checkout GitOps
        uses: actions/checkout@v3
        with:
          repository: test/gitops
          path: ./gitops
          ref: ${{ env.DEST_BRANCH }}
          token: ${{ secrets.test_REPO_PAT }}

      - name: Get Customer name
        run: |
            echo "CUSTOMER_NAME=$(echo $GITHUB_REF_NAME | cut -d "-" -f3)" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.DEST_REGION }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR for front-end
        id: image_build
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: fume-frontend
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -f dockerfiles/front-end.Dockerfile .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
          if [ ${{ env.DEST_REGION }} == 'eu-west-1' ]; then
            sed -Ei "/\-\ name\:\ 389132740677\.dkr\.ecr\.eu\-west\-1\.amazonaws\.com\/fume\-frontend$/{n;s/\w+$/$IMAGE_TAG/}" ./gitops/deployments/apps/${{ env.CUSTOMER_NAME }}/kustomization.yaml
          else
            sed -Ei "/\-\ name\:\ 389132740677\.dkr\.ecr\.us\-east\-1\.amazonaws\.com\/fume\-frontend$/{n;s/\w+$/$IMAGE_TAG/}" ./gitops/deployments/apps/${{ env.CUSTOMER_NAME }}/kustomization.yaml
          fi

      - name: Deploy latest
        run: |
          cd gitops
          git config --global user.email "devops@test.io"
          git config --global user.name "test-devops"
          git add deployments/apps/${{ env.CUSTOMER_NAME }}/kustomization.yaml
          git commit -m "Deploying latest image"
          parallel --retries 10 --delay 3 ::: "git pull --rebase && git push origin ${{ env.DEST_BRANCH }}"
        if: steps.image_build.outcome == 'success'
